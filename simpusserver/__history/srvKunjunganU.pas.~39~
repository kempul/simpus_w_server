unit srvKunjunganU;

interface
   uses Dialogs, Classes, srvCommonsU, System.SysUtils, System.StrUtils;
type

  srvKunjungan = class(srvCommon)
    private
    function ambilJsonPostKunjungan(idxstr : string) : string;
    public
    aScript : TStringList;
    function postKunjungan(idxstr : string): Boolean;
    function deleteKunjungan(idxstr : string): Boolean;
    constructor Create;
    destructor destroy;
    procedure masukkanpostKunjungan(idxstr : string);
//    property Uri : string;
  end;


implementation
     uses SynCommons, mORMot, synautil;
{ srvKunjungan }

function srvKunjungan.ambilJsonPostKunjungan(idxstr: string): string;
var sql0, sql1, tglStr, tanggalMasukStr, tanggalPulangStr : string;
    V1 : Variant;
begin
parameter_bridging('kunjungan', 'post');

V1 := _Json(FormatJson);

Result := '';
sql0 := 'select * from simpus.pasien_kunjungan where idxstr = %s limit 1';
sql1 := Format(sql0, [QuotedStr(idxstr)]);
fdQuery.Close;
fdQuery.SQL.Clear;
fdQuery.SQL.Add(sql1);
fdQuery.Active := true;

if not fdQuery.IsEmpty then
begin

//   DateTimeToString(tglStr, 'yyyy-MM-dd', fdQuery.FieldByName('tanggal').AsDateTime);
   DateTimeToString(tanggalMasukStr, 'yyyy-MM-dd''T''hh:mm:ss', fdQuery.FieldByName('tanggal_masuk').AsDateTime);
   DateTimeToString(tanggalPulangStr, 'yyyy-MM-dd''T''hh:mm:ss', fdQuery.FieldByName('tanggal_pulang').AsDateTime);




//ShowMessage(VariantSaveJSON(V1));
  V1.idxstr := idxstr;
  V1.puskesmas := fdQuery.FieldByName('puskesmas').AsInteger;
  V1.tanggal := tglStr;
  V1.nomor := fdQuery.FieldByName('nomor').AsInteger;
  V1.idPasien := fdQuery.FieldByName('id_pasien').AsString;
  V1.biaya := fdQuery.FieldByName('biaya').AsString;
  V1.datangRujukan := fdQuery.FieldByName('datang_rujukan').AsString;
  V1.datangSebab := fdQuery.FieldByName('datang_sebab').AsString;
  V1.datangSebabKet := fdQuery.FieldByName('datang_sebab_ket').AsString;
  V1.poliTujuan := fdQuery.FieldByName('poli_tujuan').AsString;
  V1.tanggalMasuk := tanggalMasukStr;
  V1.lama := fdQuery.FieldByName('lama').AsInteger;
  V1.instalasi := fdQuery.FieldByName('instalasi').AsString;
  V1.sdhPulang := fdQuery.FieldByName('sdh_pulang').AsInteger;
  V1.sdhDilayani := fdQuery.FieldByName('sdh_dilayani').AsInteger;
  V1.tanggalPulang := tanggalPulangStr;
  V1.periksaFisik := fdQuery.FieldByName('periksa_fisik').AsInteger;
  V1.jenisKunjungan := fdQuery.FieldByName('jenis_kunjungan').AsString;
  V1.farmasiOk := fdQuery.FieldByName('farmasi_ok').AsInteger;
  V1.labOk := fdQuery.FieldByName('lab_ok').AsInteger;
  V1.bthLab := fdQuery.FieldByName('bth_lab').AsInteger;
  V1.bpjsKunjungan := fdQuery.FieldByName('bpjs_kunjungan').AsString;
  V1.bpjsUrut := fdQuery.FieldByName('bpjs_urut').AsString;
  V1.lengkap := fdQuery.FieldByName('lengkap').AsInteger;
  V1.pulangSebab := fdQuery.FieldByName('pulang_sebab').AsString;
  V1.antri := fdQuery.FieldByName('antri').AsInteger;
  if not fdQuery.FieldByName('andro').IsNull then
         V1.andro := fdQuery.FieldByName('andro').AsString;
  V1.nomorAsli := fdQuery.FieldByName('nomor_asli').AsInteger;
  V1.rmDiambil := fdQuery.FieldByName('rm_diambil').AsInteger;
  V1.kdTkp := fdQuery.FieldByName('kd_tkp').AsString;
  V1.panggilLayani := fdQuery.FieldByName('panggil_layani').AsInteger;
  V1.poliLayanan := fdQuery.FieldByName('poli_layanan').AsString;
//  V1.tanggalServer := tglStr;

  fdQuery.Close;
   Result := VariantSaveJSON(V1);
end else fdQuery.Close;
end;

constructor srvKunjungan.Create;
begin
  inherited Create;
  aScript := TStringList.Create;
end;

function srvKunjungan.deleteKunjungan(idxstr: string): Boolean;
begin
Result := False;
parameter_bridging('kunjungan', 'delete');

Uri := ReplaceStr(Uri, '{idxstr}', idxstr);
Result:= httpDelete(Uri);
  if Result then jika_berhasil('simpus.pasien_kunjungan', idxstr) else
         jika_gagal('delete', Uri, FormatJson, 'simpus.pasien_kunjungan', idxstr);

FDConn.Close;
end;

destructor srvKunjungan.destroy;
begin
aScript.Free;
inherited;
end;

function srvKunjungan.postKunjungan(idxstr : string): Boolean;
var
    mStream : TMemoryStream;
    js : string;

begin
Result := False;

js := ambilJsonPostKunjungan(idxstr);
if Length(js) > 10 then
begin
mStream := TMemoryStream.Create;
WriteStrToStream(mStream, js);

//Uri := ReplaceStr(Uri, '{puskesmas}', puskesmas);
Result:= httpPost(Uri, mStream);
mStream.Free;
  if Result then masukkanpostKunjungan(idxstr);

end;

FDConn.Close;
end;



procedure srvKunjungan.masukkanpostKunjungan(idxstr : string);
var dataResp, dataList : Variant;
    i : Integer;
    tSl : TStringList;
    sqlDel0, sqlDel1 : string;
    v1 : Variant;
    tglStr : string;
begin
//       ShowMessage('awal masukkan get');
   v1 := _Json(tsResponse.Text);
   tglStr := v1.tanggalServer;
   sqlDel0 := 'update simpus.pasien_kunjungan set tanggal_server = %s where idxstr = %s;';
   sqlDel1 := Format(sqlDel0, [QuotedStr(tglStr), QuotedStr(idxstr)]);
   //sql0 := 'insert into simpus.tt(id, puskesmas, jml, tanggal_ubah) values(%s, %s, %s, %s);';
   tsL := TStringList.Create;

   try
     tSl.Add(sqlDel1);
     aScript.Assign(tSl);
     jalankanScript(tSl);
   finally
     FreeAndNil(tSl);
   end;
end;

end.
