unit srvPoliU;

interface
   uses Dialogs, Classes, srvCommonsU, System.SysUtils, System.StrUtils;
type

  srvPoli = class(srvCommon)
    private
    function ambilJsonPost(puskesmas : integer) : string;
    function jsonToSql(table : string = 'simpus.m_poli'; json : string = ''; update : Boolean = False; pkey : string = '') : string;
    procedure masukkangetPoli;
    public
    aScript : TStringList;
    function getPoli : Boolean;
    function postPoli : Boolean;
    constructor Create;
    destructor destroy;
//    property Uri : string;
  end;


implementation
     uses SynCommons, mORMot;
{ srvPoli }

function srvPoli.ambilJsonPost(puskesmas: integer): string;
var sql0, sql1, tglStr : string;
    V1 : Variant;
begin
parameter_bridging('poli puskesmas', 'post');

V1 := _Json(FormatJson);

Result := '';
sql0 := 'select * from aimpus.m_poli where poli_sakit = true and adl_aktif = true and kode != %s';
sql1 := Format(sql0, [QuotedStr('005')]);
fdQuery.Close;
fdQuery.SQL.Clear;
fdQuery.SQL.Add(sql1);
fdQuery.Active := true;
             iki edit
if not fdQuery.IsEmpty then
begin

   DateTimeToString(tglStr, 'yyyy-MM-dd', fdQuery.FieldByName('tgl_lahir').AsDateTime);

//ShowMessage(VariantSaveJSON(V1));
  V1.nik := fdQuery.FieldByName('nik').AsString;
  V1.namaLengkap := fdQuery.FieldByName('nama_lengkap').AsString;
  V1.namaProp := fdQuery.FieldByName('nama_prop').AsString;
  V1.namaKab := fdQuery.FieldByName('nama_kab').AsString;
  V1.namaKec := fdQuery.FieldByName('nama_kec').AsString;
  V1.namaKel := fdQuery.FieldByName('nama_kel').AsString;
  V1.tmptLahir := fdQuery.FieldByName('tmpt_lahir').AsString;
  V1.tglLahir := tglStr;
  V1.jenisKelamin := fdQuery.FieldByName('jenis_kelamin').AsString;
  V1.golDrh := fdQuery.FieldByName('gol_drh').AsString;
  V1.alamat := fdQuery.FieldByName('alamat').AsString;
  V1.rt := fdQuery.FieldByName('rt').AsString;
  V1.rw := fdQuery.FieldByName('rw').AsString;
  V1.agama := fdQuery.FieldByName('agama').AsString;
  V1.pekerjaan := fdQuery.FieldByName('pekerjaan').AsString;
  V1.namaIbu := fdQuery.FieldByName('nama_ibu').AsString;
  V1.namaAyah := fdQuery.FieldByName('nama_ayah').AsString;
  V1.hubunganKeluarga := fdQuery.FieldByName('hubungan_keluarga').AsInteger;
  V1.pendidikan := fdQuery.FieldByName('pendidikan').AsString;
  V1.nomorKk := fdQuery.FieldByName('nomor_kk').AsString;
  V1.statusKawin := fdQuery.FieldByName('status_kawin').AsString;
  V1.noAktaLahir := fdQuery.FieldByName('no_akta_lahir').AsString;
  V1.namaKepalaKeluarga := fdQuery.FieldByName('nama_kepala_keluarga').AsString;
  V1.autoMr := fdQuery.FieldByName('auto_mr').AsString;
  V1.mr := fdQuery.FieldByName('mr').AsString;
  V1.idx := fdQuery.FieldByName('idx').AsInteger;
  V1.kelompok := fdQuery.FieldByName('kelompok').AsString;
  V1.biaya := fdQuery.FieldByName('biaya').AsString;
  V1.kartuBpjs := fdQuery.FieldByName('kartu_bpjs').AsString;
  V1.lama := fdQuery.FieldByName('lama').AsInteger;
  V1.hp := fdQuery.FieldByName('hp').AsString;
  V1.adlLuar := fdQuery.FieldByName('adl_luar').AsInteger;
  V1.puskesmas := fdQuery.FieldByName('puskesmas').AsInteger;
  V1.kdProvider := fdQuery.FieldByName('kd_provider').AsString;
  V1.noProp := fdQuery.FieldByName('no_prop').AsInteger;
  V1.noKab := fdQuery.FieldByName('no_kab').AsInteger;
  V1.noKec := fdQuery.FieldByName('no_kec').AsInteger;
  V1.noKel := fdQuery.FieldByName('no_kel').AsInteger;
  V1.id := fdQuery.FieldByName('id').AsInteger;
  V1.idxstr := fdQuery.FieldByName('idxstr').AsString;

  fdQuery.Close;
   Result := VariantSaveJSON(V1);
end;
end;

constructor srvPoli.Create;
begin
  inherited Create;
  aScript := TStringList.Create;
end;

destructor srvPoli.destroy;
begin
aScript.Free;
inherited;
end;

function srvPoli.getPoli: Boolean;
var sql0, sql1 : string;

begin
Result := False;
parameter_bridging('poli', 'get');
//ShowMessage(uri);
//ShowMessage(uri);

Result:= httpGet(uri);

if Result then masukkangetPoli;

end;


function srvPoli.jsonToSql(table, json: string; update: Boolean;
  pkey: string): string;
var awal, akhir : string;
begin
   if update then
   begin
     akhir := 'update %s set %s where ';
     awal := GetJSONObjectAsSQL(json, update, False);
     Result := awal;
   end else
   begin
     akhir := 'insert into %s %s';
     awal := GetJSONObjectAsSQL(json, update,False);
     Result := format(akhir,[table, awal]);
   end;
end;

procedure srvPoli.masukkangetPoli;
var dataResp, dataList : Variant;
    i : Integer;
    tSl : TStringList;
    sqlDel0 : string;
    sql0, sql1 : string;
    kdPoli, nmPoli : string;
    poliSakit : Boolean;
begin
//       ShowMessage('awal masukkan get');
   sqlDel0 := 'delete from simpus.m_poli where adl_bpjs = false;';
   sql0 := 'insert into simpus.m_poli(kode, poli, poli_sakit, adl_bpjs) values(%s, %s, %s, false);';
   tsL := TStringList.Create;
   tSl.Add(sqlDel0);
   try
   dataResp := _jsonFast(tsResponse.Text);
// ShowMessage(tsResponse.Text);


   for I := 0 to dataResp._count - 1 do
     begin
       kdPoli := dataResp.Value(i).kode;
       nmPoli := dataResp.Value(i).poli;
//       ShowMessage('BooltoStr (nonSpesialis, True)');
       poliSakit := dataResp.Value(i).poliSakit;

       sql1 := Format(sql0, [QuotedStr(kdPoli), quotedStr(nmPoli), BoolToStr(poliSakit, True)]);
       tSl.Add(sql1);
//       showMessage(sqlDel1);
//       showMessage(sql1);
     end;
   finally
      aScript.Assign(tSl);
     jalankanScript(tSl);
     FreeAndNil(tSl);
   end;
end;

function srvPoli.postPoli: Boolean;
begin

end;

end.
