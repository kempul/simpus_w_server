unit srvMTindakanU;

interface
   uses Dialogs, Classes, srvCommonsU, System.SysUtils, System.StrUtils;
type

  srvMTindakan = class(srvCommon)
    private
    function jsonToSql(table : string = 'simpus.m_instalasi'; json : string = ''; update : Boolean = False; pkey : string = '') : string;
    function ambilJsonPost(kdTindakan : string) : string;
    public
    aScript : TStringList;
    function postMTindakan(kdTindakan : string): Boolean;
    function deleteMTindakan(kdTindakan : string): Boolean;
    function getMTindakan: Boolean;
    constructor Create;
    destructor destroy;
    procedure masukkanGetMTindakan;

//    property Uri : string;
  end;


implementation
     uses SynCommons, mORMot, synautil;
{ srvMTindakan }

function srvMTindakan.ambilJsonPost(kdTindakan: string): string;
var sql0, sql1, tglStr, tanggalMasukStr, tanggalPulangStr : string;
    V1 : Variant;
begin
parameter_bridging('tindakan', 'post');

V1 := _Json(FormatJson);

Result := '';
sql0 := 'select * from simpus.m_tindakan where kd_tindakan = %s limit 1';
sql1 := Format(sql0, [QuotedStr(kdTindakan)]);
fdQuery.Close;
fdQuery.SQL.Clear;
fdQuery.SQL.Add(sql1);
fdQuery.Active := true;

if not fdQuery.IsEmpty then
begin
//ShowMessage(VariantSaveJSON(V1));
  V1.kdTindakan := kdTindakan;
  V1.nmTindakan := fdQuery.FieldByName('nmTindakan').asString;
  V1.maxTarif := fdQuery.FieldByName('max_tarif').AsInteger;
  V1.withValue := fdQuery.FieldByName('with_value').AsBoolean;
  V1.adlBpjs := fdQuery.FieldByName('adl_bpjs').AsInteger;

  fdQuery.Close;
  Result := VariantSaveJSON(V1);
end;
end;

constructor srvMTindakan.Create;
begin
  inherited Create;
  aScript := TStringList.Create;
end;

function srvMTindakan.deleteMTindakan(kdTindakan: string): Boolean;
begin

end;

destructor srvMTindakan.destroy;
begin
aScript.Free;
inherited;
end;

function srvMTindakan.getMTindakan: Boolean;
begin
Result := False;
parameter_bridging('mastertindakan', 'get');
//ShowMessage(uri);
//ShowMessage(uri);

Result:= httpGet(uri);

if Result then masukkanGetMTindakan;
end;

function srvMTindakan.postMTindakan(kdTindakan : string): Boolean;
var
    mStream : TMemoryStream;
    js : string;

begin
mStream := TMemoryStream.Create;
Result := False;

js := ambilJsonPost(kdTindakan);
WriteStrToStream(mStream, js);

//Uri := ReplaceStr(Uri, '{puskesmas}', puskesmas);
Result:= httpPost(Uri, mStream);
mStream.Free;
//if Result then masukkanpostMTindakan;
end;


function srvMTindakan.jsonToSql(table, json: string; update: Boolean;
  pkey: string): string;
var awal, akhir : string;
begin
   if update then
   begin
     akhir := 'update %s set %s where ';
     awal := GetJSONObjectAsSQL(json, update, False);
     Result := awal;
   end else
   begin
     akhir := 'insert into %s %s';
     awal := GetJSONObjectAsSQL(json, update,False);
     Result := format(akhir,[table, awal]);
   end;
end;

procedure srvMTindakan.masukkanGetMTindakan;
var dataResp, dataList : Variant;
    i : Integer;
    tSl : TStringList;
    sqlx0, sqlx1 : string;
    sqlDel0, sql0, sql1 : string;
    dId, dPuskesmas, dJml, dTgl : string;
    poliSakit : Boolean;
begin
//       ShowMessage('awal masukkan get');

   sqlDel0 := 'delete from simpus.m_tindakan where adl_bpjs = 0;';
//   sql0 := 'insert into simpus.tt(id, puskesmas, jml, tanggal_ubah) values(%s, %s, %s, %s);';
   tsL := TStringList.Create;
   tSl.Add(sqlDel0);
   try
   dataResp := _jsonFast(tsResponse.Text);
   sql1 := jsonToSql('simpus.m_tindakan', dataResp);
   sql1 := ReplaceStr(sql1, 'kdTindakan', 'kd_tindakan');
   sql1 := ReplaceStr(sql1, 'nmTindakan', 'nm_tindakan');
   sql1 := ReplaceStr(sql1, 'maxTarif', 'max_tarif');
   sql1 := ReplaceStr(sql1, 'withValue', 'with_value');
   sql1 := ReplaceStr(sql1, 'adlBpjs', 'adl_bpjs');
   tSl.Add(sql1);
// ShowMessage(tsResponse.Text);

 {
   for I := 0 to dataResp._count - 1 do
     begin
       dBiaya := dataResp.Value(i).biaya;
       dIdRpt := dataResp.Value(i).idRpt;
//       ShowMessage('BooltoStr (nonSpesialis, True)');

       sql1 := Format(sql0, [QuotedStr(dBiaya), QuotedStr(dIdRpt)]);
       tSl.Add(sql1);
//       showMessage(sqlDel1);
//       showMessage(sql1);
     end;
  }
   finally
     aScript.Assign(tSl);
     jalankanScript(tSl);
     FreeAndNil(tSl);
   end;
end;
end.
