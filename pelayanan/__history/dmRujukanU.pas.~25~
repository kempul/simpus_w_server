unit dmRujukanU;

interface

uses
  System.SysUtils, System.Classes, FireDAC.Stan.Intf, FireDAC.Stan.Option,
  FireDAC.Stan.Error, FireDAC.UI.Intf, FireDAC.Phys.Intf, FireDAC.Stan.Def,
  FireDAC.Stan.Pool, FireDAC.Stan.Async, FireDAC.Phys, FireDAC.Phys.PG,
  FireDAC.Phys.PGDef, FireDAC.Stan.Param, FireDAC.DatS, FireDAC.DApt.Intf,
  FireDAC.DApt, FireDAC.VCLUI.Wait, FireDAC.Comp.UI, Data.DB, JvDataSource,
  FireDAC.Comp.DataSet, FireDAC.Comp.Client;

type
  TdataRujukan = class(TDataModule)
    con1: TFDConnection;
    fdQ1Spesialis: TFDQuery;
    ds1Spesialis: TJvDataSource;
    fdQ1Sarana: TFDQuery;
    ds1Sarana: TJvDataSource;
    fdQ1FaskesSub: TFDQuery;
    ds1FaskesSub: TJvDataSource;
    fdQ1SubSpesialis: TFDQuery;
    ds1SubSpesialis: TJvDataSource;
    fdgxwtcrsr1: TFDGUIxWaitCursor;
    fdQ1Khusus: TFDQuery;
    ds1Khusus1: TJvDataSource;
    fdQ1FaskesKhusus: TFDQuery;
    ds1FaskesKhusus1: TJvDataSource;
    fdQ1KhususSub: TFDQuery;
    ds1Khusus2Sub: TJvDataSource;
    fdCmdRujukUpdate: TFDCommand;
    fdCmd1UpdateRujukSub: TFDCommand;
    fdCmd1: TFDCommand;
    fdQ1Cetak: TFDQuery;
    fdQ1CetakNon: TFDQuery;
    procedure fdQ1SubSpesialisAfterScroll(DataSet: TDataSet);
    procedure fdQ1KhususAfterScroll(DataSet: TDataSet);
    procedure fdQ1SaranaAfterScroll(DataSet: TDataSet);
    procedure fdQ1SaranaAfterClose(DataSet: TDataSet);
    procedure fdQ1SpesialisAfterScroll(DataSet: TDataSet);
    procedure DataModuleCreate(Sender: TObject);
    procedure DataModuleDestroy(Sender: TObject);
  private
    { Private declarations }
    SLConn : TStringList;
     pghost, pgport, pgdb, pguser, pgpasswd : string;
     procedure getDB;

  public
    { Public declarations }
  end;

var
  dataRujukan: TdataRujukan;

implementation

{%CLASSGROUP 'Vcl.Controls.TControl'}

{$R *.dfm}

procedure TdataRujukan.DataModuleCreate(Sender: TObject);
begin
SLConn := TStringList.Create;
getDB;

end;

procedure TdataRujukan.DataModuleDestroy(Sender: TObject);
begin
SLConn.Free;
FDManager.Close;

end;

procedure TdataRujukan.fdQ1KhususAfterScroll(DataSet: TDataSet);
begin
fdQ1FaskesKhusus.Close;
end;

procedure TdataRujukan.fdQ1SaranaAfterClose(DataSet: TDataSet);
begin
fdQ1FaskesSub.Close;
end;

procedure TdataRujukan.fdQ1SaranaAfterScroll(DataSet: TDataSet);
begin
fdQ1FaskesSub.Close;
end;

procedure TdataRujukan.fdQ1SpesialisAfterScroll(DataSet: TDataSet);
begin
fdQ1FaskesSub.Close;
end;

procedure TdataRujukan.fdQ1SubSpesialisAfterScroll(DataSet: TDataSet);
begin
fdQ1FaskesSub.Close;
end;

procedure TdataRujukan.getDB;
begin
//if FDConnection1.Connected then FDConnection1.Connected := false;
//FDConnection1.AutoReconnect := False;
pghost:=form1_kunci.pghost;
pgport := Form1_kunci.pgport;
pgdb:=form1_kunci.pgdb;
pguser:=form1_kunci.pguser;
pgpasswd:=form1_kunci.pgpasswd;


//FDConnection1.Params.Clear;
//SLConn.Add('DriverID=PG');


  SLConn.Add('Server=' + pghost);
  SLConn.Add('Port=' +  pgport);
  SLConn.Add('Database= ' + pgdb);
  SLConn.Add('User_name=' + pguser);
  SLConn.Add('Password=' + pgpasswd);
  SLConn.Add('Pooled=True');

  fdManager.AddConnectionDef('PGDAFTAR_CONN', 'PG', SLConn, False);
  fdManager.Active := True;
  FDConnection1.ConnectionDefName := 'PGDAFTAR_CONN';
  FDConnection1.Connected := True;

end;

end.
