unit brPoliU;

interface
   uses Dialogs, Classes, brCommonsU, System.SysUtils, System.StrUtils;
type

  brPoli = class(bridgeCommon)
    private
    procedure masukkanGetPoliFktp;
    procedure masukkanGetPoliFktl;
    public
    function getPoliFktp(mulaiDari : string = '0' ; jumlahData : string = '10') : Boolean;
    function getPoliFktl(mulaiDari : string = '0' ; jumlahData : string = '10') : Boolean;
    constructor Create;
    destructor destroy;
//    property Uri : string;
  end;


implementation
     uses SynCommons;

{ brPoli }

constructor brPoli.Create;
begin
inherited Create;
end;

destructor brPoli.destroy;
begin
  inherited;
end;

function brPoli.getPoliFktl(mulaiDari, jumlahData: string): Boolean;
var sql0, sql1 : string;
begin
Result := False;
parameter_bridging('POLI FKTL', 'GET');
//ShowMessage(uri);
//Uri := StringReplace( Uri, '{keyword}', kataKunci,  []);
Uri := StringReplace( Uri, '{start}', mulaiDari,  []);
Uri := StringReplace(Uri, '{limit}', jumlahData, []);
//ShowMessage(uri);

Result:= httpGet(uri);

if Result then masukkanGetPoliFktl;

end;

function brPoli.getPoliFktp(mulaiDari, jumlahData: string): Boolean;
var sql0, sql1 : string;
begin
Result := False;
parameter_bridging('POLI FKTP', 'GET');
//ShowMessage(uri);
//Uri := StringReplace( Uri, '{keyword}', kataKunci,  []);
Uri := StringReplace( Uri, '{start}', mulaiDari,  []);
Uri := StringReplace(Uri, '{limit}', jumlahData, []);
//ShowMessage(uri);

Result:= httpGet(uri);

if Result then masukkanGetPoliFktp;

end;

procedure brPoli.masukkanGetPoliFktl;
var dataResp, dataList : Variant;
    i : Integer;
    tSl : TStringList;
    sqlx0, sqlx1 : string;
    sqlDel0, sqlDel1, sql0, sql1 : string;
    kdPoli, nmPoli : string;
   // poliSakit : Boolean;
begin
//       ShowMessage('awal masukkan get');

   sqlDel0 := 'delete from simpus2.poli_rujukan where kdpoli = %s;';
   sql0 := 'insert into simpus2.poli_rujukan(kdpoli, nmpoli) values(%s, %s);';
   tsL := TStringList.Create;
   try
   dataResp := _jsonFast(tsResponse.Text);
// ShowMessage(tsResponse.Text);

   // simpsn respon
   sqlx0 := 'insert into simpus2.a_bpjs_resp(metode, uri, terkirim, terjawab) values(''GET'', %s, %s, %s);';
   sqlx1 := Format(sqlx0,[quotedStr(uri), quotedstr(''), quotedStr(tsResponse.Text)]);
   tSl.Add(sqlx1);

//          ShowMessage('sebelum json list');

//   dataList := _JsonFast(dataResp.response.list);

//       ShowMessage(IntToStr(dataResp.response.list._Count));

   for I := 0 to dataResp.response.list._count - 1 do
     begin
       kdPoli := dataResp.response.list.Value(i).kdPoli;
       nmPoli := dataResp.response.list.Value(i).nmPoli;
//       ShowMessage('BooltoStr (nonSpesialis, True)');
//       poliSakit := dataResp.response.list.Value(i).poliSakit;
       sqlDel1 := Format(sqlDel0,[QuotedStr(kdPoli)]);
       tSl.Add(sqlDel1);

       sql1 := Format(sql0, [QuotedStr(kdPoli), quotedStr(nmPoli)]);
       tSl.Add(sql1);
//       showMessage(sqlDel1);
//       showMessage(sql1);
     end;
   finally
     jalankanScript(tSl);
     FreeAndNil(tSl);
   end;
end;

procedure brPoli.masukkanGetPoliFktp;
var dataResp, dataList : Variant;
    i : Integer;
    tSl : TStringList;
    sqlx0, sqlx1 : string;
    sqlDel0, sqlDel1, sql0, sql1 : string;
    kdPoli, nmPoli : string;
    poliSakit : Boolean;
begin
//       ShowMessage('awal masukkan get');

   sqlDel0 := 'delete from simpus.m_poli where kode = %s;';
   sql0 := 'insert into simpus.m_poli(kode, poli, poli_sakit, adl_bpjs) values(%s, %s, %s, true);';
   tsL := TStringList.Create;
   try
   dataResp := _jsonFast(tsResponse.Text);
// ShowMessage(tsResponse.Text);

   // simpsn respon
   sqlx0 := 'insert into jkn.a_bpjs_resp(metode, uri, terkirim, terjawab) values(''GET'', %s, %s, %s);';
   sqlx1 := Format(sqlx0,[quotedStr(uri), quotedstr(''), quotedStr(tsResponse.Text)]);
   tSl.Add(sqlx1);

//          ShowMessage('sebelum json list');

//   dataList := _JsonFast(dataResp.response.list);

//       ShowMessage(IntToStr(dataResp.response.list._Count));

   for I := 0 to dataResp.response.list._count - 1 do
     begin
       kdPoli := dataResp.response.list.Value(i).kdPoli;
       nmPoli := dataResp.response.list.Value(i).nmPoli;
//       ShowMessage('BooltoStr (nonSpesialis, True)');
       poliSakit := dataResp.response.list.Value(i).poliSakit;
       sqlDel1 := Format(sqlDel0,[QuotedStr(kdPoli)]);
       tSl.Add(sqlDel1);

       sql1 := Format(sql0, [QuotedStr(kdPoli), quotedStr(nmPoli), BoolToStr(poliSakit, True)]);
       tSl.Add(sql1);
//       showMessage(sqlDel1);
//       showMessage(sql1);
     end;
   finally
     jalankanScript(tSl);
     FreeAndNil(tSl);
   end;
end;

end.
